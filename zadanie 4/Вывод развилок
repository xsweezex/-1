class TreeNode:
    def __init__(self, value=0, left=None, right=None):
        self.value = value
        self.left = left
        self.right = right

def insert_into_bst(root, value):
    if root is None:
        return TreeNode(value)
    if value < root.value:
        root.left = insert_into_bst(root.left, value)
    else:
        root.right = insert_into_bst(root.right, value)
    return root

def find_forks(root):
    forks = []
    if root:
        if root.left and root.right:
            forks.append(root.value)
        forks.extend(find_forks(root.left))
        forks.extend(find_forks(root.right))
    return forks

def main():
    root = None
    values = list(map(int, input().split()))
    
    for value in values:
        if value == 0:
            break
        root = insert_into_bst(root, value)
    
    forks = find_forks(root)
    forks.sort()
    
    for fork in forks:
        print(fork)

if __name__ == "__main__":
    main()
