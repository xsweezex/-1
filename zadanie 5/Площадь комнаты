import sys


from collections import deque

def calculate_room_area(N, maze, start_row, start_col):
    visited = [[False for _ in range(N)] for _ in range(N)]
    queue = deque()
    queue.append((start_row, start_col))
    visited[start_row][start_col] = True
    area = 0

    directions = [(-1, 0), (1, 0), (0, -1), (0, 1)]

    while queue:
        x, y = queue.popleft()
        area += 1

        for dx, dy in directions:
            nx, ny = x + dx, y + dy
            if 0 <= nx < N and 0 <= ny < N:
                if not visited[nx][ny] and maze[nx][ny] == '.':
                    visited[nx][ny] = True
                    queue.append((nx, ny))

    return area

def main():
    N = int(input())
    maze = []
    for _ in range(N):
        row = input().strip()
        maze.append(row)
    start_row, start_col = map(int, input().split())
    start_row -= 1
    start_col -= 1

    print(calculate_room_area(N, maze, start_row, start_col))

if __name__ == "__main__":
    main()
